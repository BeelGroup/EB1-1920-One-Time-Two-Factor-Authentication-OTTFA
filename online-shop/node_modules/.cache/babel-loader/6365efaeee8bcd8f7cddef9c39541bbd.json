{"ast":null,"code":"import _classCallCheck from \"/Users/jackengels1/Desktop/Workspace/eBusiness/Ebusiness-Project/online-shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jackengels1/Desktop/Workspace/eBusiness/Ebusiness-Project/online-shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jackengels1/Desktop/Workspace/eBusiness/Ebusiness-Project/online-shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jackengels1/Desktop/Workspace/eBusiness/Ebusiness-Project/online-shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jackengels1/Desktop/Workspace/eBusiness/Ebusiness-Project/online-shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jackengels1/Desktop/Workspace/eBusiness/Ebusiness-Project/online-shop/src/Components/mylogin/Secure.js\";\nimport React, { Component } from \"react\";\nimport { FormText } from 'react-bootstrap';\nimport { isEmail, isEmpty } from './validator'; //import './login.css';\n\nimport './mylogin.css';\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Avatar from '@material-ui/core/Avatar';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n\n    _this.handleInputChange = function (event) {\n      var target = event.target;\n      var value = target.value;\n      var name = target.name;\n      var formData = _this.state.formData;\n      formData[name] = value;\n\n      _this.setState({\n        formData: formData\n      });\n    };\n\n    _this.validateLoginForm = function (e) {\n      var errors = {};\n      var formData = _this.state.formData;\n\n      if (isEmpty(formData.email)) {\n        errors.email = \"Email can't be blank\";\n        return errors;\n      } else if (!isEmail(formData.email)) {\n        errors.email = \"Please enter a valid email\";\n        return errors;\n      } else {\n        _this.validateUser(formData.email);\n\n        setTimeout(function () {\n          if (_this.state.validateResponse.valid === email) {\n            alert(\"Login Successful\");\n\n            _this.props.history.push('/dark');\n\n            return true;\n          } else {\n            alert(\"Login Failed\");\n            errors.password = \"incorrect password\";\n            return false;\n          }\n        }, 1000);\n      }\n\n      return false;\n    };\n\n    _this.login = function (e) {\n      e.preventDefault();\n\n      var errors = _this.validateLoginForm();\n\n      if (errors === true) {\n        alert(\"You are successfully signed in...\");\n\n        _this.props.history.push('/Verify');\n      } else {\n        _this.setState({\n          errors: errors,\n          formSubmitted: true\n        });\n      }\n    };\n\n    _this.state = {\n      user: null,\n      formData: {},\n      // Contains login form data\n      errors: {},\n      // Contains login field errors\n      formSubmitted: false,\n      // Indicates submit status of login form\n      userResponse: [],\n      loading: false // Indicates in progress state of login form\n\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"validateUser\",\n    value: function validateUser(username) {\n      var _this2 = this;\n\n      var headers = new Headers();\n      fetch('http://localhost:8080/validate/user', {\n        method: 'GET',\n        body: JSON.stringify({\n          userName: username\n        }),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        _this2.setState({\n          userResponse: json\n        });\n      });\n    }\n  }, {\n    key: \"check\",\n    value: function check() {\n      var test = \"yess\";\n      var x = test.charAt(1);\n      console.log(x);\n    }\n  }, {\n    key: \"signOut\",\n    value: function signOut() {\n      this.setState({\n        user: null\n      });\n    }\n  }, {\n    key: \"signIn\",\n    value: function signIn(username, password) {\n      this.setState({\n        user: {\n          username: username,\n          password: password\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var errors = this.state.errors;\n      return React.createElement(\"body\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"limiter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"container-login100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        \"class-\": \"wrap-login100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"lo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        class: \"avatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(LockOutlinedIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        class: \"log\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Secure Login\")), React.createElement(\"form\", {\n        className: \"lo\",\n        onSubmit: this.login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"wrap-input100 validate-input \",\n        \"data-validate\": \"username is required\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        type: \"text\",\n        name: \"email\",\n        placeholder: \"Enter your email\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), errors.email && React.createElement(\"div\", {\n        class: \"errors\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, errors.email)), React.createElement(\"div\", {\n        class: \"container-login100-form-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        class: \"login100-form-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Login\")))))));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport default Login;\n/*\r\n               <Row>\r\n                    <div class=\"limiter\">\r\n                        <div class=\"container\">\r\n                            <form onSubmit={this.login} >\r\n                                <span class=\"title\">Login</span>\r\n                                <div class=\"wrap-input100 validadte-input\">\r\n                                    <input class=\"input100\" type=\"text\" name=\"email\" placeholder=\"Enter your email\" onChange={this.handleInputChange} />\r\n                                    {errors.email &&\r\n                                        <HelpBlock>{errors.email}</HelpBlock>\r\n                                    }\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"btn\">\r\n                        <button class=\"form-btn\">\r\n                            Login\r\n                                </button>\r\n                    </div>\r\n                </Row>\r\n */\n\n/*database stuff\r\n * import React, { Component } from \"react\";\r\nimport { FormText } from 'react-bootstrap';\r\nimport { isEmail, isEmpty } from './validator';\r\n//import './login.css';\r\nimport './mylogin.css';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nlet p;\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            user: null,\r\n            formData: {}, // Contains login form data\r\n            errors: {}, // Contains login field errors\r\n            formSubmitted: false, // Indicates submit status of login form\r\n            loading: false // Indicates in progress state of login form\r\n        }\r\n\r\n\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        let { formData } = this.state;\r\n        formData[name] = value;\r\n\r\n        this.setState({\r\n            formData: formData\r\n        });\r\n    }\r\n\r\n    validateLoginForm = (e) => {\r\n\r\n        let errors = {};\r\n        const { formData } = this.state;\r\n\r\n        if (isEmpty(formData.email)) {\r\n            errors.email = \"Email can't be blank\";\r\n        } else if (!isEmail(formData.email)) {\r\n            errors.email = \"Please enter a valid email\";\r\n        }\r\n\r\n\r\n\r\n        if (isEmpty(errors)) {\r\n            return true;\r\n        } else {\r\n            return errors;\r\n        }\r\n    }\r\n    check() {\r\n        var test = \"yess\";\r\n        var x = test.charAt(1);\r\n        console.log(x);\r\n    }\r\n    signOut() {\r\n        this.setState({ user: null })\r\n    }\r\n\r\n    signIn(username, password) {\r\n        this.setState({\r\n            user: {\r\n                username,\r\n                password,\r\n            }\r\n        })\r\n    }\r\n\r\n    //number(st) {\r\n    //    //console.log(\"l\");\r\n    //   // const { formData } = this.state;\r\n    //    console.log(\"ccol\"+st);\r\n    //    const url = 'http://localhost:4000/products/find?email=' +st;\r\n\r\n    //    fetch(url)\r\n    //        .then(res => res.json())\r\n    //        .then((response) => {p=(response.data[0].password) })\r\n\r\n    //        .then(this.getProducts)\r\n    //        .catch(err => console.error(err))\r\n    //    console.log(\"number\"+ p  );\r\n    //}\r\n    login = (e) => {\r\n\r\n        e.preventDefault();\r\n        let errors = this.validateLoginForm();\r\n\r\n        if (errors === true) {\r\n            alert(\"You are successfully signed in...\");\r\n          //  this.props.history.push('/Verify')\r\n\r\n\r\n        } else {\r\n\r\n            this.setState({\r\n                errors: errors,\r\n                formSubmitted: true\r\n            });\r\n        }\r\n    }\r\n\r\n    addProduct =_=> {\r\n        const { formData } = this.state;\r\n       // console.log(\"st:\"+st);\r\n        const url = 'http://localhost:4000/products/find?email=amypi@eircom.net';\r\n        const url2 = 'http://localhost:4000/products/find?email=' + formData.email;\r\n        console.log(url2);\r\n        console.log(url);\r\n        fetch(url2)\r\n            .then(res => res.json())\r\n            .then((response) => { p = (response.data[0].password) })\r\n\r\n            .then(this.getProducts)\r\n            .catch(err => console.error(err))\r\n        console.log(\"add\"+p);\r\n    }\r\n    render() {\r\n\r\n        const { errors, formData } = this.state;\r\n\r\n        console.log(formData.email);\r\n        let o = formData.email;\r\n        return (\r\n            <body>\r\n                <div class=\"limiter\">\r\n                    <div class=\"container-login100\">\r\n                        <div class-=\"wrap-login100\">\r\n                            <div class=\"lo\">\r\n                                <Avatar class=\"avatar\">\r\n                                    <LockOutlinedIcon />\r\n                                </Avatar>\r\n                                <div class=\"log\">\r\n                                    Secure Login\r\n                                </div>\r\n                            </div>\r\n                            <form className=\"lo\" onSubmit={this.addProduct(formData.email)}>\r\n\r\n                                <div class=\"wrap-input100 validate-input \"\r\n                                    data-validate=\"username is required\">\r\n\r\n                                    <TextField type=\"text\" name=\"email\" placeholder=\"Enter your email\" onChange={this.handleInputChange} />\r\n                                    {errors.email &&\r\n                                        <div class=\"errors\">{errors.email}</div>\r\n                                    }\r\n\r\n                                </div>\r\n\r\n\r\n\r\n\r\n\r\n                                <div class=\"container-login100-form-btn\">\r\n                                    <button class=\"login100-form-btn\" >\r\n                                        Login\r\n                                </button>\r\n                                </div>\r\n                            </form>\r\n                            <button onClick={this.addProduct(formData.email)}>Add product</button>\r\n                            {p}\r\n                        </div>\r\n                    </div>\r\n                </div >\r\n            </body>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;\r\n\r\n/*\r\n               <Row>\r\n                    <div class=\"limiter\">\r\n                        <div class=\"container\">\r\n                            <form onSubmit={this.login} >\r\n                                <span class=\"title\">Login</span>\r\n                                <div class=\"wrap-input100 validadte-input\">\r\n                                    <input class=\"input100\" type=\"text\" name=\"email\" placeholder=\"Enter your email\" onChange={this.handleInputChange} />\r\n                                    {errors.email &&\r\n                                        <HelpBlock>{errors.email}</HelpBlock>\r\n                                    }\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"btn\">\r\n                        <button class=\"form-btn\">\r\n                            Login\r\n                                </button>\r\n                    </div>\r\n                </Row>\r\n */","map":{"version":3,"sources":["/Users/jackengels1/Desktop/Workspace/eBusiness/Ebusiness-Project/online-shop/src/Components/mylogin/Secure.js"],"names":["React","Component","FormText","isEmail","isEmpty","Button","TextField","Avatar","LockOutlinedIcon","Login","props","handleInputChange","event","target","value","name","formData","state","setState","validateLoginForm","e","errors","email","validateUser","setTimeout","validateResponse","valid","alert","history","push","password","login","preventDefault","formSubmitted","user","userResponse","loading","username","headers","Headers","fetch","method","body","JSON","stringify","userName","then","response","json","test","x","charAt","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,aAAjC,C,CACA;;AACA,OAAO,eAAP;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;;IAEMC,K;;;;;AAEF,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,+EAAMA,KAAN;;AADe,UAenBC,iBAfmB,GAeC,UAACC,KAAD,EAAW;AAC3B,UAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,UAAMC,KAAK,GAAGD,MAAM,CAACC,KAArB;AACA,UAAMC,IAAI,GAAGF,MAAM,CAACE,IAApB;AAH2B,UAKrBC,QALqB,GAKR,MAAKC,KALG,CAKrBD,QALqB;AAM3BA,MAAAA,QAAQ,CAACD,IAAD,CAAR,GAAiBD,KAAjB;;AAEA,YAAKI,QAAL,CAAc;AACVF,QAAAA,QAAQ,EAAEA;AADA,OAAd;AAGH,KA1BkB;;AAAA,UA4BnBG,iBA5BmB,GA4BC,UAACC,CAAD,EAAO;AAEvB,UAAIC,MAAM,GAAG,EAAb;AAFuB,UAGfL,QAHe,GAGF,MAAKC,KAHH,CAGfD,QAHe;;AAKvB,UAAIZ,OAAO,CAACY,QAAQ,CAACM,KAAV,CAAX,EAA6B;AACzBD,QAAAA,MAAM,CAACC,KAAP,GAAe,sBAAf;AACA,eAAOD,MAAP;AACH,OAHD,MAIK,IAAI,CAAClB,OAAO,CAACa,QAAQ,CAACM,KAAV,CAAZ,EAA6B;AAC9BD,QAAAA,MAAM,CAACC,KAAP,GAAe,4BAAf;AACA,eAAOD,MAAP;AACH,OAHI,MAKL;AACI,cAAKE,YAAL,CAAkBP,QAAQ,CAACM,KAA3B;;AACAE,QAAAA,UAAU,CAAC,YAAI;AACf,cAAG,MAAKP,KAAL,CAAWQ,gBAAX,CAA4BC,KAA5B,KAAsCJ,KAAzC,EAA+C;AAC3CK,YAAAA,KAAK,CAAC,kBAAD,CAAL;;AACA,kBAAKjB,KAAL,CAAWkB,OAAX,CAAmBC,IAAnB,CAAwB,OAAxB;;AACA,mBAAO,IAAP;AACH,WAJD,MAKI;AACAF,YAAAA,KAAK,CAAC,cAAD,CAAL;AACAN,YAAAA,MAAM,CAACS,QAAP,GAAkB,oBAAlB;AACA,mBAAO,KAAP;AACH;AACA,SAXS,EAWR,IAXQ,CAAV;AAYH;;AACD,aAAO,KAAP;AACH,KA1DkB;;AAAA,UAkGnBC,KAlGmB,GAkGX,UAACX,CAAD,EAAO;AAEXA,MAAAA,CAAC,CAACY,cAAF;;AACA,UAAIX,MAAM,GAAG,MAAKF,iBAAL,EAAb;;AAEA,UAAIE,MAAM,KAAK,IAAf,EAAqB;AACjBM,QAAAA,KAAK,CAAC,mCAAD,CAAL;;AACA,cAAKjB,KAAL,CAAWkB,OAAX,CAAmBC,IAAnB,CAAwB,SAAxB;AAGH,OALD,MAKO;AAEH,cAAKX,QAAL,CAAc;AACVG,UAAAA,MAAM,EAAEA,MADE;AAEVY,UAAAA,aAAa,EAAE;AAFL,SAAd;AAIH;AACJ,KAnHkB;;AAGf,UAAKhB,KAAL,GAAa;AACTiB,MAAAA,IAAI,EAAE,IADG;AAETlB,MAAAA,QAAQ,EAAE,EAFD;AAEK;AACdK,MAAAA,MAAM,EAAE,EAHC;AAGG;AACZY,MAAAA,aAAa,EAAE,KAJN;AAIa;AACtBE,MAAAA,YAAY,EAAE,EALL;AAMTC,MAAAA,OAAO,EAAE,KANA,CAMM;;AANN,KAAb;AAHe;AAalB;;;;iCA+CYC,Q,EAAU;AAAA;;AACnB,UAAIC,OAAO,GAAG,IAAIC,OAAJ,EAAd;AACAC,MAAAA,KAAK,CAAC,qCAAD,EAAwC;AAC7CC,QAAAA,MAAM,EAAE,KADqC;AAE7CC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACrBC,UAAAA,QAAQ,EAAER;AADW,SAAf,CAFuC;AAK/CC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AALsC,OAAxC,CAAL,CAQDQ,IARC,CAQI,UAAAC,QAAQ,EAAI;AAChB,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,OAVC,EAUCF,IAVD,CAUM,UAAAE,IAAI,EAAI;AACd,QAAA,MAAI,CAAC9B,QAAL,CAAc;AACZiB,UAAAA,YAAY,EAACa;AADD,SAAd;AAGD,OAdC;AAeH;;;4BAEO;AACJ,UAAIC,IAAI,GAAG,MAAX;AACA,UAAIC,CAAC,GAAGD,IAAI,CAACE,MAAL,CAAY,CAAZ,CAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,CAAZ;AACH;;;8BACS;AACN,WAAKhC,QAAL,CAAc;AAAEgB,QAAAA,IAAI,EAAE;AAAR,OAAd;AACH;;;2BAEMG,Q,EAAUP,Q,EAAU;AACvB,WAAKZ,QAAL,CAAc;AACVgB,QAAAA,IAAI,EAAE;AACFG,UAAAA,QAAQ,EAARA,QADE;AAEFP,UAAAA,QAAQ,EAARA;AAFE;AADI,OAAd;AAMH;;;6BAsBQ;AAAA,UAEGT,MAFH,GAEc,KAAKJ,KAFnB,CAEGI,MAFH;AAIL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,KAAK,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,KAAK,EAAC,oBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,kBAAO,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,KAAK,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII;AAAK,QAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJJ,CADJ,EASI;AAAM,QAAA,SAAS,EAAC,IAAhB;AAAqB,QAAA,QAAQ,EAAE,KAAKU,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAK,QAAA,KAAK,EAAC,+BAAX;AACI,yBAAc,sBADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGI,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAC,MAAhB;AAAuB,QAAA,IAAI,EAAC,OAA5B;AAAoC,QAAA,WAAW,EAAC,kBAAhD;AAAmE,QAAA,QAAQ,EAAE,KAAKpB,iBAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAIKU,MAAM,CAACC,KAAP,IACG;AAAK,QAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqBD,MAAM,CAACC,KAA5B,CALR,CAFJ,EAgBI;AAAK,QAAA,KAAK,EAAC,6BAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,KAAK,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CAhBJ,CATJ,CADJ,CADJ,CADJ,CADJ;AAwCH;;;;EAnKerB,S;;AAsKpB,eAAeQ,KAAf;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAyBA","sourcesContent":["import React, { Component } from \"react\";\r\nimport { FormText } from 'react-bootstrap';\r\nimport { isEmail, isEmpty } from './validator';\r\n//import './login.css';\r\nimport './mylogin.css';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            user: null,\r\n            formData: {}, // Contains login form data\r\n            errors: {}, // Contains login field errors\r\n            formSubmitted: false, // Indicates submit status of login form\r\n            userResponse: [],\r\n            loading: false // Indicates in progress state of login form\r\n        }\r\n\r\n\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        let { formData } = this.state;\r\n        formData[name] = value;\r\n\r\n        this.setState({\r\n            formData: formData\r\n        });\r\n    }\r\n\r\n    validateLoginForm = (e) => {\r\n\r\n        let errors = {};\r\n        const { formData } = this.state;\r\n\r\n        if (isEmpty(formData.email)) {\r\n            errors.email = \"Email can't be blank\";\r\n            return errors;\r\n        } \r\n        else if (!isEmail(formData.email)){\r\n            errors.email = \"Please enter a valid email\";\r\n            return errors;\r\n        }\r\n        else\r\n        {\r\n            this.validateUser(formData.email);\r\n            setTimeout(()=>{\r\n            if(this.state.validateResponse.valid === email){\r\n                alert(\"Login Successful\");\r\n                this.props.history.push('/dark');\r\n                return true;\r\n            }\r\n            else{\r\n                alert(\"Login Failed\");\r\n                errors.password = \"incorrect password\";\r\n                return false\r\n            }\r\n            },1000);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    validateUser(username) {\r\n        let headers = new Headers();\r\n        fetch('http://localhost:8080/validate/user', {\r\n        method: 'GET',\r\n        body: JSON.stringify({\r\n        userName: username,\r\n      }),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\"\r\n      }\r\n    }).then(response => {\r\n        return response.json()\r\n      }).then(json => {\r\n        this.setState({\r\n          userResponse:json\r\n        });\r\n      });\r\n    }\r\n\r\n    check() {\r\n        var test = \"yess\";\r\n        var x = test.charAt(1);\r\n        console.log(x);\r\n    }\r\n    signOut() {\r\n        this.setState({ user: null })\r\n    }\r\n\r\n    signIn(username, password) {\r\n        this.setState({\r\n            user: {\r\n                username,\r\n                password,\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    login = (e) => {\r\n\r\n        e.preventDefault();\r\n        let errors = this.validateLoginForm();\r\n\r\n        if (errors === true) {\r\n            alert(\"You are successfully signed in...\");\r\n            this.props.history.push('/Verify')\r\n\r\n\r\n        } else {\r\n           \r\n            this.setState({\r\n                errors: errors,\r\n                formSubmitted: true\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { errors } = this.state;\r\n\r\n        return (\r\n            <body>\r\n                <div class=\"limiter\">\r\n                    <div class=\"container-login100\">\r\n                        <div class-=\"wrap-login100\">\r\n                            <div class=\"lo\">\r\n                                <Avatar class=\"avatar\">\r\n                                    <LockOutlinedIcon />\r\n                                </Avatar>\r\n                                <div class=\"log\">\r\n                                    Secure Login\r\n                                </div>\r\n                            </div>\r\n                            <form className=\"lo\" onSubmit={this.login}>\r\n                                \r\n                                <div class=\"wrap-input100 validate-input \"\r\n                                    data-validate=\"username is required\">\r\n\r\n                                    <TextField type=\"text\" name=\"email\" placeholder=\"Enter your email\" onChange={this.handleInputChange} />\r\n                                    {errors.email &&\r\n                                        <div class=\"errors\">{errors.email}</div>\r\n                                    }\r\n                                    \r\n                                </div>\r\n\r\n\r\n\r\n                                \r\n\r\n                                <div class=\"container-login100-form-btn\">\r\n                                    <button class=\"login100-form-btn\" >\r\n                                        Login\r\n                                </button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div >\r\n            </body>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;\r\n\r\n/*\r\n               <Row>\r\n                    <div class=\"limiter\">\r\n                        <div class=\"container\">\r\n                            <form onSubmit={this.login} >\r\n                                <span class=\"title\">Login</span>\r\n                                <div class=\"wrap-input100 validadte-input\">\r\n                                    <input class=\"input100\" type=\"text\" name=\"email\" placeholder=\"Enter your email\" onChange={this.handleInputChange} />\r\n                                    {errors.email &&\r\n                                        <HelpBlock>{errors.email}</HelpBlock>\r\n                                    }\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"btn\">\r\n                        <button class=\"form-btn\">\r\n                            Login\r\n                                </button>\r\n                    </div>\r\n                </Row>\r\n */\r\n\r\n\r\n\r\n/*database stuff\r\n * import React, { Component } from \"react\";\r\nimport { FormText } from 'react-bootstrap';\r\nimport { isEmail, isEmpty } from './validator';\r\n//import './login.css';\r\nimport './mylogin.css';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nlet p;\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            user: null,\r\n            formData: {}, // Contains login form data\r\n            errors: {}, // Contains login field errors\r\n            formSubmitted: false, // Indicates submit status of login form\r\n            loading: false // Indicates in progress state of login form\r\n        }\r\n\r\n\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        let { formData } = this.state;\r\n        formData[name] = value;\r\n\r\n        this.setState({\r\n            formData: formData\r\n        });\r\n    }\r\n\r\n    validateLoginForm = (e) => {\r\n\r\n        let errors = {};\r\n        const { formData } = this.state;\r\n\r\n        if (isEmpty(formData.email)) {\r\n            errors.email = \"Email can't be blank\";\r\n        } else if (!isEmail(formData.email)) {\r\n            errors.email = \"Please enter a valid email\";\r\n        }\r\n\r\n\r\n\r\n        if (isEmpty(errors)) {\r\n            return true;\r\n        } else {\r\n            return errors;\r\n        }\r\n    }\r\n    check() {\r\n        var test = \"yess\";\r\n        var x = test.charAt(1);\r\n        console.log(x);\r\n    }\r\n    signOut() {\r\n        this.setState({ user: null })\r\n    }\r\n\r\n    signIn(username, password) {\r\n        this.setState({\r\n            user: {\r\n                username,\r\n                password,\r\n            }\r\n        })\r\n    }\r\n\r\n    //number(st) {\r\n    //    //console.log(\"l\");\r\n    //   // const { formData } = this.state;\r\n    //    console.log(\"ccol\"+st);\r\n    //    const url = 'http://localhost:4000/products/find?email=' +st;\r\n\r\n    //    fetch(url)\r\n    //        .then(res => res.json())\r\n    //        .then((response) => {p=(response.data[0].password) })\r\n\r\n    //        .then(this.getProducts)\r\n    //        .catch(err => console.error(err))\r\n    //    console.log(\"number\"+ p  );\r\n    //}\r\n    login = (e) => {\r\n\r\n        e.preventDefault();\r\n        let errors = this.validateLoginForm();\r\n\r\n        if (errors === true) {\r\n            alert(\"You are successfully signed in...\");\r\n          //  this.props.history.push('/Verify')\r\n\r\n\r\n        } else {\r\n\r\n            this.setState({\r\n                errors: errors,\r\n                formSubmitted: true\r\n            });\r\n        }\r\n    }\r\n\r\n    addProduct =_=> {\r\n        const { formData } = this.state;\r\n       // console.log(\"st:\"+st);\r\n        const url = 'http://localhost:4000/products/find?email=amypi@eircom.net';\r\n        const url2 = 'http://localhost:4000/products/find?email=' + formData.email;\r\n        console.log(url2);\r\n        console.log(url);\r\n        fetch(url2)\r\n            .then(res => res.json())\r\n            .then((response) => { p = (response.data[0].password) })\r\n\r\n            .then(this.getProducts)\r\n            .catch(err => console.error(err))\r\n        console.log(\"add\"+p);\r\n    }\r\n    render() {\r\n\r\n        const { errors, formData } = this.state;\r\n\r\n        console.log(formData.email);\r\n        let o = formData.email;\r\n        return (\r\n            <body>\r\n                <div class=\"limiter\">\r\n                    <div class=\"container-login100\">\r\n                        <div class-=\"wrap-login100\">\r\n                            <div class=\"lo\">\r\n                                <Avatar class=\"avatar\">\r\n                                    <LockOutlinedIcon />\r\n                                </Avatar>\r\n                                <div class=\"log\">\r\n                                    Secure Login\r\n                                </div>\r\n                            </div>\r\n                            <form className=\"lo\" onSubmit={this.addProduct(formData.email)}>\r\n\r\n                                <div class=\"wrap-input100 validate-input \"\r\n                                    data-validate=\"username is required\">\r\n\r\n                                    <TextField type=\"text\" name=\"email\" placeholder=\"Enter your email\" onChange={this.handleInputChange} />\r\n                                    {errors.email &&\r\n                                        <div class=\"errors\">{errors.email}</div>\r\n                                    }\r\n\r\n                                </div>\r\n\r\n\r\n\r\n\r\n\r\n                                <div class=\"container-login100-form-btn\">\r\n                                    <button class=\"login100-form-btn\" >\r\n                                        Login\r\n                                </button>\r\n                                </div>\r\n                            </form>\r\n                            <button onClick={this.addProduct(formData.email)}>Add product</button>\r\n                            {p}\r\n                        </div>\r\n                    </div>\r\n                </div >\r\n            </body>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;\r\n\r\n/*\r\n               <Row>\r\n                    <div class=\"limiter\">\r\n                        <div class=\"container\">\r\n                            <form onSubmit={this.login} >\r\n                                <span class=\"title\">Login</span>\r\n                                <div class=\"wrap-input100 validadte-input\">\r\n                                    <input class=\"input100\" type=\"text\" name=\"email\" placeholder=\"Enter your email\" onChange={this.handleInputChange} />\r\n                                    {errors.email &&\r\n                                        <HelpBlock>{errors.email}</HelpBlock>\r\n                                    }\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"btn\">\r\n                        <button class=\"form-btn\">\r\n                            Login\r\n                                </button>\r\n                    </div>\r\n                </Row>\r\n */"]},"metadata":{},"sourceType":"module"}