{"ast":null,"code":"import _classCallCheck from \"/Users/jackengels1/Desktop/Workspace/eBusiness/Ebusiness-Project/online-shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jackengels1/Desktop/Workspace/eBusiness/Ebusiness-Project/online-shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jackengels1/Desktop/Workspace/eBusiness/Ebusiness-Project/online-shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jackengels1/Desktop/Workspace/eBusiness/Ebusiness-Project/online-shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/jackengels1/Desktop/Workspace/eBusiness/Ebusiness-Project/online-shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/jackengels1/Desktop/Workspace/eBusiness/Ebusiness-Project/online-shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jackengels1/Desktop/Workspace/eBusiness/Ebusiness-Project/online-shop/src/Components/mylogin/Verify.js\";\nimport React from 'react';\nimport './login.css';\nimport { NavLink } from \"react-router-dom\";\nimport TextField from \"@material-ui/core/TextField\";\nimport './mylogin.css';\nimport Avatar from '@material-ui/core/Avatar';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { isEmail, isEmpty } from './validator';\nvar code_to_Verify = \"\";\nvar code = '';\n\nvar Verify =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Verify, _React$Component);\n\n  function Verify(props) {\n    var _this;\n\n    _classCallCheck(this, Verify);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Verify).call(this, props));\n\n    _this.handleInputChange = function (event) {\n      var target = event.target;\n      var value = target.value;\n      var name = target.name;\n      var formData = _this.state.formData;\n      formData[name] = value;\n\n      _this.setState({\n        formData: formData\n      });\n    };\n\n    _this.validateLoginForm = function (e) {\n      var errors = {};\n      var formData = _this.state.formData;\n\n      if (isEmpty(formData.code)) {\n        errors.code = \"Code Can't be Blank\";\n        return errors;\n      } else {\n        _this.verifyOtp(localStorage.getItem('phoneNumber'), formData.code);\n\n        setTimeout(function () {\n          console.log(_this.state.otpVerifyResponse.errorMessage);\n\n          if (!isEmpty(_this.state.otpVerifyResponse.errorMessage)) {\n            console.log(\"here\");\n            errors.code = \"Code Can't be Blank\";\n            console.log(\"here2\");\n            console.log(errors.code);\n            return errors;\n          } else {\n            if (_this.state.otpVerifyResponse.valid === 'true') {\n              _this.props.history.push('/Partial');\n\n              return true;\n            } else {\n              errors.code = \"Not a valid OTP Code\";\n              return errors;\n            }\n          }\n        }, 2000);\n      }\n\n      return errors;\n    };\n\n    _this.state = {\n      number: '',\n      code: '',\n      formData: {},\n      errors: {},\n      otpVerifyResponse: []\n    };\n    _this.handleCode = _this.handleCode.bind(_assertThisInitialized(_this));\n    _this.handleC = _this.handleC.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Verify, [{\n    key: \"handleC\",\n    value: function handleC(event) {\n      this.setState({\n        code: event.target.value\n      });\n      code = this.state.code;\n    }\n  }, {\n    key: \"sendOtp\",\n    value: function sendOtp(number) {\n      var _this2 = this;\n\n      fetch('https://cors-anywhere.herokuapp.com/http://34.76.147.17:8080/otp/send', {\n        method: 'POST',\n        body: JSON.stringify({\n          phoneNumber: number\n        }),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        _this2.setState({\n          otpSendResponse: json\n        });\n      });\n    }\n  }, {\n    key: \"verifyOtp\",\n    value: function verifyOtp(number, c) {\n      var _this3 = this;\n\n      fetch('http://localhost:8080/otp/verify', {\n        method: 'POST',\n        body: JSON.stringify({\n          phoneNumber: number,\n          code: c\n        }),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        _this3.setState({\n          otpVerifyResponse: json\n        });\n      });\n    }\n  }, {\n    key: \"handleCode\",\n    value: function handleCode(e) {\n      // this.verifyOtp(this.state.number, this.state.code);\n      e.preventDefault();\n      var errors = this.validateLoginForm();\n\n      if (errors === true) {\n        this.verifyOtp(this.state.number, this.state.code);\n      } else {\n        this.setState({\n          errors: errors,\n          formSubmitted: true\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var errors = this.state.errors;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"limiter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"container-login100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        \"class-\": \"wrap-login100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"lo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        class: \"avatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(LockOutlinedIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        class: \"log\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"OTP\")), React.createElement(\"form\", {\n        class: \"lo\",\n        onSubmit: this.handleCode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"wrap-input100 validate-input \",\n        \"data-validate\": \"username is required\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        type: \"text\",\n        name: \"code\",\n        placeholder: \"Verification code\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), errors.code && React.createElement(\"div\", {\n        class: \"errors\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, errors.code)), React.createElement(\"div\", {\n        class: \"container-login100-form-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        class: \"login100-form-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Login\"))))))), React.createElement(NavLink, {\n        to: \"/partial\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"click here to go to partial password\"));\n    }\n  }]);\n\n  return Verify;\n}(React.Component);\n\nexport default Verify;","map":{"version":3,"sources":["/Users/jackengels1/Desktop/Workspace/eBusiness/Ebusiness-Project/online-shop/src/Components/mylogin/Verify.js"],"names":["React","NavLink","TextField","Avatar","LockOutlinedIcon","isEmail","isEmpty","code_to_Verify","code","Verify","props","handleInputChange","event","target","value","name","formData","state","setState","validateLoginForm","e","errors","verifyOtp","localStorage","getItem","setTimeout","console","log","otpVerifyResponse","errorMessage","valid","history","push","number","handleCode","bind","handleC","fetch","method","body","JSON","stringify","phoneNumber","headers","then","response","json","otpSendResponse","c","preventDefault","formSubmitted","Component"],"mappings":"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","sourcesContent":["import React, { } from 'react';\r\nimport './login.css';\r\nimport { NavLink, } from \"react-router-dom\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport './mylogin.css';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { isEmail, isEmpty } from './validator';\r\n\r\n\r\n\r\nlet code_to_Verify = \"\";\r\nlet code = '';\r\n\r\nclass Verify extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            number: '',\r\n            code: '',\r\n            formData: {},\r\n            errors: {},\r\n            otpVerifyResponse: []\r\n\r\n        };\r\n        this.handleCode = this.handleCode.bind(this);\r\n        this.handleC = this.handleC.bind(this);\r\n    }\r\n    \r\n\r\n    handleC(event) {\r\n        this.setState({ code: event.target.value });\r\n        code = this.state.code;\r\n    }\r\n\r\n\r\n    sendOtp(number) {\r\n        fetch('https://cors-anywhere.herokuapp.com/http://34.76.147.17:8080/otp/send', {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                phoneNumber: number,\r\n            }),\r\n            headers: {\r\n                \"Content-type\": \"application/json; charset=UTF-8\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(json => {\r\n            this.setState({\r\n                otpSendResponse: json\r\n            });\r\n        });\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        let { formData } = this.state;\r\n        formData[name] = value;\r\n\r\n        this.setState({\r\n            formData: formData\r\n        });\r\n    }\r\n\r\n\r\n    verifyOtp(number, c) {\r\n        fetch('http://localhost:8080/otp/verify', {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                phoneNumber: number,\r\n                code: c,\r\n            }),\r\n            headers: {\r\n                \"Content-type\": \"application/json; charset=UTF-8\"\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(json => {\r\n            this.setState({\r\n                otpVerifyResponse: json\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n    validateLoginForm = (e) => {\r\n       \r\n        let errors = {};\r\n        const { formData } = this.state;\r\n        if (isEmpty(formData.code)) {\r\n            errors.code = \"Code Can't be Blank\";\r\n            return errors;\r\n        } \r\n        else\r\n        {\r\n            this.verifyOtp(localStorage.getItem('phoneNumber'), formData.code);\r\n            setTimeout(()=>{\r\n            console.log(this.state.otpVerifyResponse.errorMessage)\r\n            if(!isEmpty(this.state.otpVerifyResponse.errorMessage)){\r\n                console.log(\"here\")\r\n                errors.code = \"Code Can't be Blank\";\r\n                console.log(\"here2\")\r\n                console.log(errors.code)\r\n                return errors;\r\n            }\r\n            else{\r\n                if(this.state.otpVerifyResponse.valid === 'true'){\r\n                    this.props.history.push('/Partial')\r\n                    return true;\r\n                }\r\n                else{\r\n                    errors.code = \"Not a valid OTP Code\";\r\n                    return errors\r\n                }\r\n            }\r\n            },2000);\r\n        }\r\n        return errors;\r\n    }\r\n\r\n    handleCode(e) {\r\n       // this.verifyOtp(this.state.number, this.state.code);\r\n\r\n        e.preventDefault();\r\n        let errors = this.validateLoginForm();\r\n\r\n        if (errors === true) {\r\n            this.verifyOtp(this.state.number, this.state.code)\r\n\r\n        } else {\r\n\r\n            this.setState({\r\n\r\n                errors: errors,\r\n                formSubmitted: true\r\n            });\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n    \r\n        return (\r\n           <div>\r\n                <div>\r\n                    <div  class=\"limiter\">\r\n                        <div class=\"container-login100\">\r\n                            <div class-=\"wrap-login100\">\r\n                                <div class=\"lo\">\r\n                                    <Avatar class=\"avatar\">\r\n                                        <LockOutlinedIcon />\r\n                                    </Avatar>\r\n                                    <div class=\"log\">\r\n                                        OTP\r\n                                </div>\r\n                                </div>\r\n                                <form class=\"lo\" onSubmit={this.handleCode}>\r\n\r\n                                    <div class=\"wrap-input100 validate-input \"\r\n                                        data-validate=\"username is required\">\r\n\r\n                                        <TextField type=\"text\" name=\"code\" placeholder=\"Verification code\" onChange={this.handleInputChange} />\r\n                                        {errors.code &&\r\n                                            <div class=\"errors\">{errors.code}</div>\r\n                                        }\r\n\r\n                                    </div>\r\n\r\n\r\n\r\n\r\n\r\n                                    <div class=\"container-login100-form-btn\">\r\n                                        <button class=\"login100-form-btn\" >\r\n                                            Login\r\n                                </button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div >\r\n                </div>\r\n                <NavLink to=\"/partial\">click here to go to partial password</NavLink>\r\n\r\n            </div>\r\n\r\n\r\n           \r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Verify"]},"metadata":{},"sourceType":"module"}