{"ast":null,"code":"import _classCallCheck from \"/Users/jackengels1/Desktop/Workspace/eBusiness/Ebusiness-Project/online-shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jackengels1/Desktop/Workspace/eBusiness/Ebusiness-Project/online-shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jackengels1/Desktop/Workspace/eBusiness/Ebusiness-Project/online-shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jackengels1/Desktop/Workspace/eBusiness/Ebusiness-Project/online-shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jackengels1/Desktop/Workspace/eBusiness/Ebusiness-Project/online-shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jackengels1/Desktop/Workspace/eBusiness/Ebusiness-Project/online-shop/src/Components/PriceDialog/PriceDialog.js\";\nimport React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\n\nvar PriceDialog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PriceDialog, _Component);\n\n  function PriceDialog() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PriceDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PriceDialog)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      lastOpenedStatus: false\n    };\n    return _this;\n  }\n\n  _createClass(PriceDialog, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          min = _this$state.min,\n          max = _this$state.max;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(Dialog, {\n        open: this.props.open,\n        onClose: function onClose() {\n          _this2.props.onClose();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Enter price range\"), React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          padding: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        value: min,\n        type: \"number\",\n        style: {\n          width: 70\n        },\n        placeholder: \"Min\",\n        label: \"Min\",\n        onChange: function onChange(e) {\n          var val = parseInt(e.target.value, 10);\n\n          if (Number.isNaN(val) || val < 0 || val > 100000) {\n            return;\n          }\n\n          _this2.setState({\n            min: val\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        value: max,\n        type: \"number\",\n        style: {\n          width: 70,\n          marginLeft: 20\n        },\n        placeholder: \"Max\",\n        label: \"Max\",\n        onChange: function onChange(e) {\n          var val = parseInt(e.target.value, 10);\n\n          if (Number.isNaN(val) || val < 0 || val > 100000) {\n            return;\n          }\n\n          _this2.setState({\n            max: val\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          padding: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        style: {\n          width: 50\n        },\n        onClick: function onClick() {\n          _this2.props.onSave(min, max);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"OK\"), React.createElement(Button, {\n        color: \"primary\",\n        variant: \"outlined\",\n        style: {\n          width: 50,\n          marginLeft: 5\n        },\n        onClick: function onClick() {\n          _this2.props.onClose();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Cancel\")))));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    // Only when this dialog is opened, copy the prices to local state.\n    value: function getDerivedStateFromProps(props, state) {\n      if (props.open === true && state.lastOpenedStatus === false) {\n        return {\n          min: props.min,\n          max: props.max,\n          lastOpenedStatus: true\n        };\n      }\n\n      return {\n        lastOpenedStatus: props.open\n      };\n    }\n  }]);\n\n  return PriceDialog;\n}(Component);\n\nexport default PriceDialog;","map":{"version":3,"sources":["/Users/jackengels1/Desktop/Workspace/eBusiness/Ebusiness-Project/online-shop/src/Components/PriceDialog/PriceDialog.js"],"names":["React","Component","Button","Dialog","DialogTitle","TextField","PriceDialog","state","lastOpenedStatus","min","max","props","open","onClose","display","flexDirection","alignItems","padding","width","e","val","parseInt","target","value","Number","isNaN","setState","marginLeft","onSave"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nclass PriceDialog extends Component {\r\n  state = {\r\n    lastOpenedStatus: false,\r\n  };\r\n\r\n\r\n  // Only when this dialog is opened, copy the prices to local state.\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.open === true && state.lastOpenedStatus === false) {\r\n      return {\r\n        min: props.min,\r\n        max: props.max,\r\n        lastOpenedStatus: true,\r\n      };\r\n    }\r\n\r\n    return { lastOpenedStatus: props.open };\r\n  }\r\n\r\n  render() {\r\n    let { min, max } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          open={this.props.open}\r\n          onClose={() => {\r\n            this.props.onClose();\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\"\r\n            }}\r\n          >\r\n            <DialogTitle>Enter price range</DialogTitle>\r\n\r\n            <div style={{ display: \"flex\", padding: 20 }}>\r\n              <TextField\r\n                value={min}\r\n                type=\"number\"\r\n                style={{ width: 70 }}\r\n                placeholder=\"Min\"\r\n                label=\"Min\"\r\n                onChange={e => {\r\n                  let val = parseInt(e.target.value, 10);\r\n                  if (\r\n                    Number.isNaN(val) ||\r\n                    val < 0 ||\r\n                    val > 100000\r\n                  ) {\r\n                    return;\r\n                  }\r\n                  this.setState({\r\n                    min: val\r\n                  });\r\n                }}\r\n              />\r\n              <TextField\r\n                value={max}\r\n                type=\"number\"\r\n                style={{ width: 70, marginLeft: 20 }}\r\n                placeholder=\"Max\"\r\n                label=\"Max\"\r\n                onChange={e => {\r\n                  let val = parseInt(e.target.value, 10);\r\n\r\n                  if (\r\n                    Number.isNaN(val) ||\r\n                    val < 0 ||\r\n                    val > 100000\r\n                  ) {\r\n                    return;\r\n                  }\r\n                  this.setState({\r\n                    max: val\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div style={{ display: \"flex\", padding: 20 }}>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                style={{ width: 50 }}\r\n                onClick={() => {\r\n                  this.props.onSave(min, max);\r\n                }}\r\n              >\r\n                OK\r\n              </Button>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                style={{ width: 50, marginLeft: 5 }}\r\n                onClick={() => {\r\n                  this.props.onClose();\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PriceDialog;\r\n"]},"metadata":{},"sourceType":"module"}