{"ast":null,"code":"import _classCallCheck from \"/Users/jackengels1/Desktop/Workspace/eBusiness/Ebusiness-Project/online-shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jackengels1/Desktop/Workspace/eBusiness/Ebusiness-Project/online-shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jackengels1/Desktop/Workspace/eBusiness/Ebusiness-Project/online-shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jackengels1/Desktop/Workspace/eBusiness/Ebusiness-Project/online-shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jackengels1/Desktop/Workspace/eBusiness/Ebusiness-Project/online-shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jackengels1/Desktop/Workspace/eBusiness/Ebusiness-Project/online-shop/src/Components/mylogin/Login.js\";\nimport React, { Component } from \"react\";\nimport './login.css';\nimport { isEmail, isEmpty } from './validator';\nimport { NavLink } from \"react-router-dom\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Avatar from '@material-ui/core/Avatar';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport './mylogin.css';\nimport { encode } from \"base-64\";\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n\n    _this.handleInputChange = function (event) {\n      var target = event.target;\n      var value = target.value;\n      var name = target.name;\n      var formData = _this.state.formData;\n      formData[name] = value;\n\n      _this.setState({\n        formData: formData\n      });\n    };\n\n    _this.validateLoginForm = function (e) {\n      var errors = {};\n      var formData = _this.state.formData;\n\n      if (isEmpty(formData.email)) {\n        errors.email = \"Email can't be blank\";\n        return errors;\n      } else if (!isEmail(formData.email)) {\n        errors.email = \"Please enter a valid email\";\n        return errors;\n      } else if (isEmpty(formData.password)) {\n        errors.password = \"Password can't be blank\";\n        return errors;\n      } else {\n        _this.validateUser(formData.email, formData.password);\n\n        setTimeout(function () {\n          console.log(_this.state.validateResponse.valid);\n\n          if (_this.state.validateResponse.valid === true) {\n            alert(\"Login Successful\");\n\n            _this.props.history.push('/dark');\n\n            return true;\n          } else {\n            alert(\"Login Failed\");\n            errors.password = \"incorrect password\";\n            return false;\n          }\n        }, 1000);\n      }\n\n      return false;\n    };\n\n    _this.login = function (e) {\n      console.log(localStorage.getItem('login_status'));\n      localStorage.setItem('login_status', '');\n      e.preventDefault();\n\n      var errors = _this.validateLoginForm();\n\n      if (errors === true) {\n        alert(\"You are successfully signed in...\");\n        localStorage.setItem('login_status', '');\n        var formData = _this.state.formData;\n        localStorage.setItem('db_email', formData.email);\n\n        _this.props.history.push('/db');\n      } else {\n        _this.setState({\n          errors: errors,\n          formSubmitted: true\n        });\n      }\n    };\n\n    _this.state = {\n      user: null,\n      formData: {},\n      // Contains login form data\n      errors: {},\n      // Contains login field errors\n      formSubmitted: false,\n      // Indicates submit status of login form\n      loading: false,\n      // Indicates in progress state of login form\n      validateResponse: []\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"validateUser\",\n    value: function validateUser(username, password) {\n      var _this2 = this;\n\n      var headers = new Headers();\n      var usernameAuth = '123';\n      var passwordAuth = '123';\n      fetch('http://localhost:8080/validate/login', {\n        method: 'POST',\n        body: JSON.stringify({\n          userName: username,\n          password: password\n        }),\n        headers: {\n          'Authorization': 'Basic ' + encode(usernameAuth + \":\" + passwordAuth),\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      }).then(function (response) {\n        if (response !== null) return response.json();else alert(\"Service unable to respond\");\n      }).then(function (json) {\n        _this2.setState({\n          validateResponse: json\n        });\n      });\n    }\n  }, {\n    key: \"check\",\n    value: function check() {\n      var test = \"yess\";\n      var x = test.charAt(1);\n      console.log(x);\n    }\n  }, {\n    key: \"signOut\",\n    value: function signOut() {\n      this.setState({\n        user: null\n      });\n    }\n  }, {\n    key: \"signIn\",\n    value: function signIn(username, password) {\n      this.setState({\n        user: {\n          username: username,\n          password: password\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var errors = this.state.errors;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"limiter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"container-login100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        \"class-\": \"wrap-login100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"lo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        class: \"avatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(LockOutlinedIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        class: \"log\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Login\")), React.createElement(\"form\", {\n        className: \"login100-form validate-form\",\n        onSubmit: this.login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"wrap-input100 validate-input \",\n        \"data-validate\": \"username is required\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        class: \"fields\",\n        type: \"text\",\n        name: \"email\",\n        placeholder: \"Enter your email\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }), errors.email && React.createElement(\"div\", {\n        class: \"errors\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, errors.email)), React.createElement(\"div\", {\n        class: \"wrap-input100 validate-input \",\n        \"data-validate\": \"username is required\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        class: \"fields\",\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Enter your password\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }), errors.password && React.createElement(\"div\", {\n        class: \"errors\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, errors.password)), React.createElement(\"div\", {\n        class: \"container-login100-form-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        class: \"login100-form-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"Login\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        class: \"link\",\n        to: \"/Secure\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"On a untrusted device?\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        class: \"link\",\n        to: \"/register\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Don't have an account?\")))))));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport default Login;","map":{"version":3,"sources":["/Users/jackengels1/Desktop/Workspace/eBusiness/Ebusiness-Project/online-shop/src/Components/mylogin/Login.js"],"names":["React","Component","isEmail","isEmpty","NavLink","TextField","Avatar","LockOutlinedIcon","encode","Login","props","handleInputChange","event","target","value","name","formData","state","setState","validateLoginForm","e","errors","email","password","validateUser","setTimeout","console","log","validateResponse","valid","alert","history","push","login","localStorage","getItem","setItem","preventDefault","formSubmitted","user","loading","username","headers","Headers","usernameAuth","passwordAuth","fetch","method","body","JSON","stringify","userName","then","response","json","test","x","charAt"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport './login.css';\r\nimport { isEmail, isEmpty} from './validator';\r\nimport { NavLink, } from \"react-router-dom\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport './mylogin.css';\r\nimport { encode } from \"base-64\";\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            user: null,\r\n            formData: {}, // Contains login form data\r\n            errors: {}, // Contains login field errors\r\n            formSubmitted: false, // Indicates submit status of login form\r\n            loading: false, // Indicates in progress state of login form\r\n            validateResponse: []\r\n        }\r\n\r\n\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        let { formData } = this.state;\r\n        formData[name] = value;\r\n\r\n       this.setState({\r\n            formData: formData\r\n        });\r\n    }\r\n\r\n    validateLoginForm = (e) => {\r\n\r\n        let errors = {};\r\n        const { formData } = this.state;\r\n\r\n        if (isEmpty(formData.email)) {\r\n            errors.email = \"Email can't be blank\";\r\n            return errors;\r\n        } else if (!isEmail(formData.email)) {\r\n            errors.email = \"Please enter a valid email\";\r\n            return errors;\r\n        }\r\n\r\n        else if (isEmpty(formData.password)) {\r\n            errors.password = \"Password can't be blank\";\r\n            return errors;\r\n        }\r\n\r\n        else\r\n        {\r\n            this.validateUser(formData.email, formData.password);\r\n            setTimeout(()=>{\r\n                console.log(this.state.validateResponse.valid)\r\n            if(this.state.validateResponse.valid===true){\r\n                alert(\"Login Successful\");\r\n                this.props.history.push('/dark');\r\n                return true;\r\n            }\r\n            else{\r\n                alert(\"Login Failed\");\r\n                errors.password = \"incorrect password\";\r\n                return false\r\n            }\r\n            },1000);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    \r\n    validateUser(username, password) {\r\n        let headers = new Headers();\r\n        let usernameAuth = '123';\r\n        let passwordAuth = '123';\r\n        fetch('http://localhost:8080/validate/login', \r\n        {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n            userName: username,\r\n            password: password,\r\n        }),\r\n        headers: \r\n        {\r\n            'Authorization': 'Basic ' + encode(usernameAuth + \":\" + passwordAuth),\r\n            \"Content-type\": \"application/json; charset=UTF-8\"\r\n        }\r\n        }).then(response => \r\n        {\r\n            if(response !== null)\r\n                return response.json()\r\n            else\r\n                alert(\"Service unable to respond\")\r\n        }).then(json => {\r\n            this.setState({\r\n            validateResponse:json\r\n        });\r\n      });\r\n\r\n    }\r\n\r\n    check() {\r\n        var test = \"yess\";\r\n        var x = test.charAt(1);\r\n        console.log(x);\r\n    }\r\n    signOut() {\r\n        this.setState({ user: null })\r\n    }\r\n\r\n    signIn(username, password) {\r\n        this.setState({\r\n            user: {\r\n                username,\r\n                password,\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    login = (e) => {\r\n        console.log(localStorage.getItem('login_status'));\r\n        localStorage.setItem('login_status', '');\r\n\r\n        e.preventDefault();\r\n        let errors = this.validateLoginForm();\r\n\r\n        if (errors === true) {\r\n            alert(\"You are successfully signed in...\");\r\n            localStorage.setItem('login_status', '');\r\n            const { formData } = this.state;\r\n            localStorage.setItem('db_email', formData.email);\r\n            this.props.history.push('/db')\r\n        } else {\r\n            this.setState({\r\n                errors: errors,\r\n                formSubmitted: true\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        return (\r\n            <div>\r\n                <div class=\"limiter\">\r\n                    <div class=\"container-login100\">\r\n                        <div class-=\"wrap-login100\">\r\n                            <div class=\"lo\">\r\n                                <Avatar class=\"avatar\">\r\n                                    <LockOutlinedIcon />\r\n                                </Avatar>\r\n                                <div class=\"log\">\r\n                                    Login\r\n                                </div>\r\n                            </div>\r\n                            <form className=\"login100-form validate-form\" onSubmit={this.login}>\r\n\r\n                                <div class=\"wrap-input100 validate-input \"\r\n                                    data-validate=\"username is required\">\r\n\r\n                                    <TextField class=\"fields\" type=\"text\" name=\"email\" placeholder=\"Enter your email\" onChange={this.handleInputChange} />\r\n                                    {errors.email &&\r\n                                        <div class=\"errors\">{errors.email}</div>\r\n                                    }\r\n                                   \r\n                                </div>\r\n                                <div class=\"wrap-input100 validate-input \"\r\n                                    data-validate=\"username is required\">\r\n                                   \r\n                                    <TextField class=\"fields\" type=\"password\" name=\"password\" placeholder=\"Enter your password\" onChange={this.handleInputChange} />\r\n                                    {errors.password &&\r\n                                        <div class=\"errors\">{errors.password}</div>\r\n                                    }\r\n\r\n                                </div>\r\n                                <div class=\"container-login100-form-btn\">\r\n                                    <button class=\"login100-form-btn\" >\r\n                                        Login\r\n                                </button>\r\n                                </div>\r\n                                <div>\r\n                                <NavLink class=\"link\" to=\"/Secure\">On a untrusted device?</NavLink>\r\n                                    </div>\r\n                                <div>\r\n                                    <NavLink class=\"link\" to=\"/register\">Don't have an account?</NavLink>\r\n</div>\r\n                            </form>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div >\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}